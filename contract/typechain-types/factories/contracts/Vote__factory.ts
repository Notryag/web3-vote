/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Vote, VoteInterface } from "../../contracts/Vote";

const _abi = [
  {
    inputs: [
      {
        internalType: "string[]",
        name: "nameList",
        type: "string[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "voteSuccess",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "board",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "dalegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBoardInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Vote.Board[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "host",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addressList",
        type: "address[]",
      },
    ],
    name: "mandate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "targetId",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voters",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isVoted",
        type: "bool",
      },
      {
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "targetId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ede38038062001ede833981810160405281019062000037919062000570565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000606565b60405180910390fd5b620000be816200021d60201b60201c565b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160026000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060005b81518110156200021557600060405180604001604052808484815181106200019a576200019962000623565b5b602002602001015181526020016000815250905060038190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019081620001f191906200089d565b506020820151816001015550505080806200020c90620009b3565b9150506200016d565b505062000a00565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200034582620002fa565b810181811067ffffffffffffffff821117156200036757620003666200030b565b5b80604052505050565b60006200037c620002e1565b90506200038a82826200033a565b919050565b600067ffffffffffffffff821115620003ad57620003ac6200030b565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff821115620003e657620003e56200030b565b5b620003f182620002fa565b9050602081019050919050565b60005b838110156200041e57808201518184015260208101905062000401565b60008484015250505050565b6000620004416200043b84620003c8565b62000370565b90508281526020810184848401111562000460576200045f620003c3565b5b6200046d848285620003fe565b509392505050565b600082601f8301126200048d576200048c620002f5565b5b81516200049f8482602086016200042a565b91505092915050565b6000620004bf620004b9846200038f565b62000370565b90508083825260208201905060208402830185811115620004e557620004e4620003be565b5b835b818110156200053357805167ffffffffffffffff8111156200050e576200050d620002f5565b5b8086016200051d898262000475565b85526020850194505050602081019050620004e7565b5050509392505050565b600082601f830112620005555762000554620002f5565b5b815162000567848260208601620004a8565b91505092915050565b600060208284031215620005895762000588620002eb565b5b600082015167ffffffffffffffff811115620005aa57620005a9620002f0565b5b620005b8848285016200053d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005ee82620005c1565b9050919050565b6200060081620005e1565b82525050565b60006020820190506200061d6000830184620005f5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620006a557607f821691505b602082108103620006bb57620006ba6200065d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620007257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620006e6565b620007318683620006e6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200077e62000778620007728462000749565b62000753565b62000749565b9050919050565b6000819050919050565b6200079a836200075d565b620007b2620007a98262000785565b848454620006f3565b825550505050565b600090565b620007c9620007ba565b620007d68184846200078f565b505050565b5b81811015620007fe57620007f2600082620007bf565b600181019050620007dc565b5050565b601f8211156200084d576200081781620006c1565b6200082284620006d6565b8101602085101562000832578190505b6200084a6200084185620006d6565b830182620007db565b50505b505050565b600082821c905092915050565b6000620008726000198460080262000852565b1980831691505092915050565b60006200088d83836200085f565b9150826002028217905092915050565b620008a88262000652565b67ffffffffffffffff811115620008c457620008c36200030b565b5b620008d082546200068c565b620008dd82828562000802565b600060209050601f83116001811462000915576000841562000900578287015190505b6200090c85826200087f565b8655506200097c565b601f1984166200092586620006c1565b60005b828110156200094f5784890151825560018201915060208501945060208101905062000928565b868310156200096f57848901516200096b601f8916826200085f565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620009c08262000749565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620009f557620009f462000984565b5b600182019050919050565b6114ce8062000a106000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610132578063a3ec138d14610150578063ed34c6ee14610183578063f2fde38b146101a1578063f437bc59146101bd5761009e565b80630121b93f146100a3578063080dfdf5146100bf57806328ed6e3f146100db578063715018a61461010c5780638760c76114610116575b600080fd5b6100bd60048036038101906100b89190610c99565b6101db565b005b6100d960048036038101906100d49190610d24565b610356565b005b6100f560048036038101906100f09190610c99565b6106f0565b604051610103929190610df0565b60405180910390f35b6101146107ac565b005b610130600480360381019061012b9190610e85565b6107c0565b005b61013a6108d9565b6040516101479190610ee1565b60405180910390f35b61016a60048036038101906101659190610d24565b610902565b60405161017a9493929190610f17565b60405180910390f35b61018b61095f565b60405161019891906110b4565b60405180910390f35b6101bb60048036038101906101b69190610d24565b610a5a565b005b6101c5610ae0565b6040516101d29190610ee1565b60405180910390f35b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015403610265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90611122565b60405180910390fd5b8060010160009054906101000a900460ff16156102b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ae9061118e565b60405180910390fd5b60018160010160006101000a81548160ff0219169083151502179055508181600201819055508060000154600383815481106102f6576102f56111ae565b5b90600052602060002090600202016001016000828254610316919061120c565b925050819055507f71811a05f98c0d6a3ee4d373e7d62d53422d5baf858d802816efce275df7d3fa60405161034a9061128c565b60405180910390a15050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff16156103eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e2906112f8565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045090611364565b60405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105c857600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ba906113d0565b60405180910390fd5b61045a565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff16156106cb578160000154600382600201548154811061069f5761069e6111ae565b5b906000526020600020906002020160010160008282546106bf919061120c565b925050819055506106eb565b81600001548160000160008282546106e3919061120c565b925050819055505b505050565b6003818154811061070057600080fd5b90600052602060002090600202016000915090508060000180546107239061141f565b80601f016020809104026020016040519081016040528092919081815260200182805461074f9061141f565b801561079c5780601f106107715761010080835404028352916020019161079c565b820191906000526020600020905b81548152906001019060200180831161077f57829003601f168201915b5050505050908060010154905082565b6107b4610b06565b6107be6000610b8d565b565b6107c8610b06565b60005b828290508110156108d457600260008484848181106107ed576107ec6111ae565b5b90506020020160208101906108029190610d24565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166108c15760016002600085858581811061086a576108696111ae565b5b905060200201602081019061087f9190610d24565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505b80806108cc90611450565b9150506107cb565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905084565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610a5157838290600052602060002090600202016040518060400160405290816000820180546109b69061141f565b80601f01602080910402602001604051908101604052809291908181526020018280546109e29061141f565b8015610a2f5780601f10610a0457610100808354040283529160200191610a2f565b820191906000526020600020905b815481529060010190602001808311610a1257829003601f168201915b5050505050815260200160018201548152505081526020019060010190610983565b50505050905090565b610a62610b06565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ad45760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610acb9190610ee1565b60405180910390fd5b610add81610b8d565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b0e610c51565b73ffffffffffffffffffffffffffffffffffffffff16610b2c6108d9565b73ffffffffffffffffffffffffffffffffffffffff1614610b8b57610b4f610c51565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b829190610ee1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b6000819050919050565b610c7681610c63565b8114610c8157600080fd5b50565b600081359050610c9381610c6d565b92915050565b600060208284031215610caf57610cae610c59565b5b6000610cbd84828501610c84565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cf182610cc6565b9050919050565b610d0181610ce6565b8114610d0c57600080fd5b50565b600081359050610d1e81610cf8565b92915050565b600060208284031215610d3a57610d39610c59565b5b6000610d4884828501610d0f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d8b578082015181840152602081019050610d70565b60008484015250505050565b6000601f19601f8301169050919050565b6000610db382610d51565b610dbd8185610d5c565b9350610dcd818560208601610d6d565b610dd681610d97565b840191505092915050565b610dea81610c63565b82525050565b60006040820190508181036000830152610e0a8185610da8565b9050610e196020830184610de1565b9392505050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e4557610e44610e20565b5b8235905067ffffffffffffffff811115610e6257610e61610e25565b5b602083019150836020820283011115610e7e57610e7d610e2a565b5b9250929050565b60008060208385031215610e9c57610e9b610c59565b5b600083013567ffffffffffffffff811115610eba57610eb9610c5e565b5b610ec685828601610e2f565b92509250509250929050565b610edb81610ce6565b82525050565b6000602082019050610ef66000830184610ed2565b92915050565b60008115159050919050565b610f1181610efc565b82525050565b6000608082019050610f2c6000830187610de1565b610f396020830186610f08565b610f466040830185610ed2565b610f536060830184610de1565b95945050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610fa482610d51565b610fae8185610f88565b9350610fbe818560208601610d6d565b610fc781610d97565b840191505092915050565b610fdb81610c63565b82525050565b60006040830160008301518482036000860152610ffe8282610f99565b91505060208301516110136020860182610fd2565b508091505092915050565b600061102a8383610fe1565b905092915050565b6000602082019050919050565b600061104a82610f5c565b6110548185610f67565b93508360208202850161106685610f78565b8060005b858110156110a25784840389528151611083858261101e565b945061108e83611032565b925060208a0199505060018101905061106a565b50829750879550505050505092915050565b600060208201905081810360008301526110ce818461103f565b905092915050565b7f486173206e6f20726967687420746f20766f74652e0000000000000000000000600082015250565b600061110c601583610d5c565b9150611117826110d6565b602082019050919050565b6000602082019050818103600083015261113b816110ff565b9050919050565b7f416c726561647920766f7465642e000000000000000000000000000000000000600082015250565b6000611178600e83610d5c565b915061118382611142565b602082019050919050565b600060208201905081810360008301526111a78161116b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061121782610c63565b915061122283610c63565b925082820190508082111561123a576112396111dd565b5b92915050565b7fe68a95e7a5a8e68890e58a9f0000000000000000000000000000000000000000600082015250565b6000611276600c83610d5c565b915061128182611240565b602082019050919050565b600060208201905081810360008301526112a581611269565b9050919050565b7f796f7520616c656172647920766f7465642e0000000000000000000000000000600082015250565b60006112e2601283610d5c565b91506112ed826112ac565b602082019050919050565b60006020820190508181036000830152611311816112d5565b9050919050565b7f6e6f7420746f2064656c656761746520796f7573656c662e0000000000000000600082015250565b600061134e601883610d5c565b915061135982611318565b602082019050919050565b6000602082019050818103600083015261137d81611341565b9050919050565b7fe4b88de883bde5beaae78eafe5a794e689980000000000000000000000000000600082015250565b60006113ba601283610d5c565b91506113c582611384565b602082019050919050565b600060208201905081810360008301526113e9816113ad565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061143757607f821691505b60208210810361144a576114496113f0565b5b50919050565b600061145b82610c63565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361148d5761148c6111dd565b5b60018201905091905056fea26469706673582212206e899c6a0a91a8affaf02d43e06272db297841247497dfcb2182c9e6c22c00ee64736f6c63430008140033";

type VoteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VoteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vote__factory extends ContractFactory {
  constructor(...args: VoteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    nameList: string[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(nameList, overrides || {});
  }
  override deploy(
    nameList: string[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(nameList, overrides || {}) as Promise<
      Vote & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Vote__factory {
    return super.connect(runner) as Vote__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoteInterface {
    return new Interface(_abi) as VoteInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Vote {
    return new Contract(address, _abi, runner) as unknown as Vote;
  }
}
